/*
 * FS-API
 * FS-API'et er et generelt grensesnitt mot Felles Studentsystem (FS)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package no.bibsys.fs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Adresse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-25T14:26:52.663+02:00[Europe/Paris]")public class Adresse {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    PRIVAT("PRIVAT"),
    ARBEID("ARBEID"),
    BES_K("BESÃ˜K");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }
  @JsonProperty("type")

  private TypeEnum type = null;

  @JsonProperty("co")

  private String co = null;

  @JsonProperty("gate")

  private String gate = null;

  @JsonProperty("sted")

  private String sted = null;

  @JsonProperty("postnummer")

  private String postnummer = null;

  @JsonProperty("land")

  private String land = null;
  public Adresse type(TypeEnum type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }
  public Adresse co(String co) {
    this.co = co;
    return this;
  }

  

  /**
  * Get co
  * @return co
  **/
  @Schema(description = "")
  public String getCo() {
    return co;
  }
  public void setCo(String co) {
    this.co = co;
  }
  public Adresse gate(String gate) {
    this.gate = gate;
    return this;
  }

  

  /**
  * Get gate
  * @return gate
  **/
  @Schema(description = "")
  public String getGate() {
    return gate;
  }
  public void setGate(String gate) {
    this.gate = gate;
  }
  public Adresse sted(String sted) {
    this.sted = sted;
    return this;
  }

  

  /**
  * Get sted
  * @return sted
  **/
  @Schema(description = "")
  public String getSted() {
    return sted;
  }
  public void setSted(String sted) {
    this.sted = sted;
  }
  public Adresse postnummer(String postnummer) {
    this.postnummer = postnummer;
    return this;
  }

  

  /**
  * Get postnummer
  * @return postnummer
  **/
  @Schema(description = "")
  public String getPostnummer() {
    return postnummer;
  }
  public void setPostnummer(String postnummer) {
    this.postnummer = postnummer;
  }
  public Adresse land(String land) {
    this.land = land;
    return this;
  }

  

  /**
  * Get land
  * @return land
  **/
  @Schema(description = "")
  public String getLand() {
    return land;
  }
  public void setLand(String land) {
    this.land = land;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Adresse adresse = (Adresse) o;
    return Objects.equals(this.type, adresse.type) &&
        Objects.equals(this.co, adresse.co) &&
        Objects.equals(this.gate, adresse.gate) &&
        Objects.equals(this.sted, adresse.sted) &&
        Objects.equals(this.postnummer, adresse.postnummer) &&
        Objects.equals(this.land, adresse.land);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(type, co, gate, sted, postnummer, land);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Adresse {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    co: ").append(toIndentedString(co)).append("\n");
    sb.append("    gate: ").append(toIndentedString(gate)).append("\n");
    sb.append("    sted: ").append(toIndentedString(sted)).append("\n");
    sb.append("    postnummer: ").append(toIndentedString(postnummer)).append("\n");
    sb.append("    land: ").append(toIndentedString(land)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
