/*
 * FS-API
 * FS-API'et er et generelt grensesnitt mot Felles Studentsystem (FS)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package no.bibsys.fs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import no.bibsys.fs.model.EvuKursDeltakelseId;
import no.bibsys.fs.model.Foretak;
import no.bibsys.fs.model.InformasjonskildeInfo;
import no.bibsys.fs.model.KursAvbruddStatusInfo;
import no.bibsys.fs.model.RegFormInfo;
import no.bibsys.fs.model.SvarStatusInfo;
import no.bibsys.fs.model.TilbudsStatusInfo;
import org.threeten.bp.LocalDate;

/**
 * EvuKursDeltakelse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-04-25T14:26:52.663+02:00[Europe/Paris]")public class EvuKursDeltakelse {

  @JsonProperty("id")

  private EvuKursDeltakelseId id = null;

  @JsonProperty("foretak")

  private Foretak foretak = null;

  @JsonProperty("registreringsform")

  private RegFormInfo registreringsform = null;

  @JsonProperty("avbruddsstatus")

  private KursAvbruddStatusInfo avbruddsstatus = null;

  @JsonProperty("informasjonskilde")

  private InformasjonskildeInfo informasjonskilde = null;

  @JsonProperty("tilbudstatus")

  private TilbudsStatusInfo tilbudstatus = null;

  @JsonProperty("svarstatus")

  private SvarStatusInfo svarstatus = null;

  @JsonProperty("mott")

  private Boolean mott = null;

  @JsonProperty("godkjent")

  private Boolean godkjent = null;

  @JsonProperty("kursbevisUtstedt")

  private Boolean kursbevisUtstedt = null;

  @JsonProperty("privatFaktura")

  private Boolean privatFaktura = null;

  @JsonProperty("resNett")

  private Boolean resNett = null;

  @JsonProperty("vurdering")

  private Boolean vurdering = null;

  @JsonProperty("opptatt")

  private Boolean opptatt = null;

  @JsonProperty("rabattpris")

  private Boolean rabattpris = null;

  @JsonProperty("betaltSemesteravgift")

  private Boolean betaltSemesteravgift = null;

  @JsonProperty("ordneOvernattingSelv")

  private Boolean ordneOvernattingSelv = null;

  @JsonProperty("ordneReiseSelv")

  private Boolean ordneReiseSelv = null;

  @JsonProperty("manglerDokumentasjon")

  private Boolean manglerDokumentasjon = null;

  @JsonProperty("studiekontraktMottatt")

  private Boolean studiekontraktMottatt = null;

  @JsonProperty("datoPameldt")

  private LocalDate datoPameldt = null;

  @JsonProperty("datoKursbevisUtstedt")

  private LocalDate datoKursbevisUtstedt = null;

  @JsonProperty("datoTrukket")

  private LocalDate datoTrukket = null;

  @JsonProperty("undervisningsparti")

  private Integer undervisningsparti = null;

  @JsonProperty("ventelistenummer")

  private Integer ventelistenummer = null;

  @JsonProperty("fakturaReferanse")

  private String fakturaReferanse = null;

  @JsonProperty("merknad")

  private String merknad = null;
  public EvuKursDeltakelse id(EvuKursDeltakelseId id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public EvuKursDeltakelseId getId() {
    return id;
  }
  public void setId(EvuKursDeltakelseId id) {
    this.id = id;
  }
  public EvuKursDeltakelse foretak(Foretak foretak) {
    this.foretak = foretak;
    return this;
  }

  

  /**
  * Get foretak
  * @return foretak
  **/
  @Schema(description = "")
  public Foretak getForetak() {
    return foretak;
  }
  public void setForetak(Foretak foretak) {
    this.foretak = foretak;
  }
  public EvuKursDeltakelse registreringsform(RegFormInfo registreringsform) {
    this.registreringsform = registreringsform;
    return this;
  }

  

  /**
  * Get registreringsform
  * @return registreringsform
  **/
  @Schema(description = "")
  public RegFormInfo getRegistreringsform() {
    return registreringsform;
  }
  public void setRegistreringsform(RegFormInfo registreringsform) {
    this.registreringsform = registreringsform;
  }
  public EvuKursDeltakelse avbruddsstatus(KursAvbruddStatusInfo avbruddsstatus) {
    this.avbruddsstatus = avbruddsstatus;
    return this;
  }

  

  /**
  * Get avbruddsstatus
  * @return avbruddsstatus
  **/
  @Schema(description = "")
  public KursAvbruddStatusInfo getAvbruddsstatus() {
    return avbruddsstatus;
  }
  public void setAvbruddsstatus(KursAvbruddStatusInfo avbruddsstatus) {
    this.avbruddsstatus = avbruddsstatus;
  }
  public EvuKursDeltakelse informasjonskilde(InformasjonskildeInfo informasjonskilde) {
    this.informasjonskilde = informasjonskilde;
    return this;
  }

  

  /**
  * Get informasjonskilde
  * @return informasjonskilde
  **/
  @Schema(description = "")
  public InformasjonskildeInfo getInformasjonskilde() {
    return informasjonskilde;
  }
  public void setInformasjonskilde(InformasjonskildeInfo informasjonskilde) {
    this.informasjonskilde = informasjonskilde;
  }
  public EvuKursDeltakelse tilbudstatus(TilbudsStatusInfo tilbudstatus) {
    this.tilbudstatus = tilbudstatus;
    return this;
  }

  

  /**
  * Get tilbudstatus
  * @return tilbudstatus
  **/
  @Schema(description = "")
  public TilbudsStatusInfo getTilbudstatus() {
    return tilbudstatus;
  }
  public void setTilbudstatus(TilbudsStatusInfo tilbudstatus) {
    this.tilbudstatus = tilbudstatus;
  }
  public EvuKursDeltakelse svarstatus(SvarStatusInfo svarstatus) {
    this.svarstatus = svarstatus;
    return this;
  }

  

  /**
  * Get svarstatus
  * @return svarstatus
  **/
  @Schema(description = "")
  public SvarStatusInfo getSvarstatus() {
    return svarstatus;
  }
  public void setSvarstatus(SvarStatusInfo svarstatus) {
    this.svarstatus = svarstatus;
  }
  public EvuKursDeltakelse mott(Boolean mott) {
    this.mott = mott;
    return this;
  }

  

  /**
  * Get mott
  * @return mott
  **/
  @Schema(description = "")
  public Boolean isMott() {
    return mott;
  }
  public void setMott(Boolean mott) {
    this.mott = mott;
  }
  public EvuKursDeltakelse godkjent(Boolean godkjent) {
    this.godkjent = godkjent;
    return this;
  }

  

  /**
  * Get godkjent
  * @return godkjent
  **/
  @Schema(description = "")
  public Boolean isGodkjent() {
    return godkjent;
  }
  public void setGodkjent(Boolean godkjent) {
    this.godkjent = godkjent;
  }
  public EvuKursDeltakelse kursbevisUtstedt(Boolean kursbevisUtstedt) {
    this.kursbevisUtstedt = kursbevisUtstedt;
    return this;
  }

  

  /**
  * Get kursbevisUtstedt
  * @return kursbevisUtstedt
  **/
  @Schema(description = "")
  public Boolean isKursbevisUtstedt() {
    return kursbevisUtstedt;
  }
  public void setKursbevisUtstedt(Boolean kursbevisUtstedt) {
    this.kursbevisUtstedt = kursbevisUtstedt;
  }
  public EvuKursDeltakelse privatFaktura(Boolean privatFaktura) {
    this.privatFaktura = privatFaktura;
    return this;
  }

  

  /**
  * Get privatFaktura
  * @return privatFaktura
  **/
  @Schema(description = "")
  public Boolean isPrivatFaktura() {
    return privatFaktura;
  }
  public void setPrivatFaktura(Boolean privatFaktura) {
    this.privatFaktura = privatFaktura;
  }
  public EvuKursDeltakelse resNett(Boolean resNett) {
    this.resNett = resNett;
    return this;
  }

  

  /**
  * Get resNett
  * @return resNett
  **/
  @Schema(description = "")
  public Boolean isResNett() {
    return resNett;
  }
  public void setResNett(Boolean resNett) {
    this.resNett = resNett;
  }
  public EvuKursDeltakelse vurdering(Boolean vurdering) {
    this.vurdering = vurdering;
    return this;
  }

  

  /**
  * Get vurdering
  * @return vurdering
  **/
  @Schema(description = "")
  public Boolean isVurdering() {
    return vurdering;
  }
  public void setVurdering(Boolean vurdering) {
    this.vurdering = vurdering;
  }
  public EvuKursDeltakelse opptatt(Boolean opptatt) {
    this.opptatt = opptatt;
    return this;
  }

  

  /**
  * Get opptatt
  * @return opptatt
  **/
  @Schema(description = "")
  public Boolean isOpptatt() {
    return opptatt;
  }
  public void setOpptatt(Boolean opptatt) {
    this.opptatt = opptatt;
  }
  public EvuKursDeltakelse rabattpris(Boolean rabattpris) {
    this.rabattpris = rabattpris;
    return this;
  }

  

  /**
  * Get rabattpris
  * @return rabattpris
  **/
  @Schema(description = "")
  public Boolean isRabattpris() {
    return rabattpris;
  }
  public void setRabattpris(Boolean rabattpris) {
    this.rabattpris = rabattpris;
  }
  public EvuKursDeltakelse betaltSemesteravgift(Boolean betaltSemesteravgift) {
    this.betaltSemesteravgift = betaltSemesteravgift;
    return this;
  }

  

  /**
  * Get betaltSemesteravgift
  * @return betaltSemesteravgift
  **/
  @Schema(description = "")
  public Boolean isBetaltSemesteravgift() {
    return betaltSemesteravgift;
  }
  public void setBetaltSemesteravgift(Boolean betaltSemesteravgift) {
    this.betaltSemesteravgift = betaltSemesteravgift;
  }
  public EvuKursDeltakelse ordneOvernattingSelv(Boolean ordneOvernattingSelv) {
    this.ordneOvernattingSelv = ordneOvernattingSelv;
    return this;
  }

  

  /**
  * Get ordneOvernattingSelv
  * @return ordneOvernattingSelv
  **/
  @Schema(description = "")
  public Boolean isOrdneOvernattingSelv() {
    return ordneOvernattingSelv;
  }
  public void setOrdneOvernattingSelv(Boolean ordneOvernattingSelv) {
    this.ordneOvernattingSelv = ordneOvernattingSelv;
  }
  public EvuKursDeltakelse ordneReiseSelv(Boolean ordneReiseSelv) {
    this.ordneReiseSelv = ordneReiseSelv;
    return this;
  }

  

  /**
  * Get ordneReiseSelv
  * @return ordneReiseSelv
  **/
  @Schema(description = "")
  public Boolean isOrdneReiseSelv() {
    return ordneReiseSelv;
  }
  public void setOrdneReiseSelv(Boolean ordneReiseSelv) {
    this.ordneReiseSelv = ordneReiseSelv;
  }
  public EvuKursDeltakelse manglerDokumentasjon(Boolean manglerDokumentasjon) {
    this.manglerDokumentasjon = manglerDokumentasjon;
    return this;
  }

  

  /**
  * Get manglerDokumentasjon
  * @return manglerDokumentasjon
  **/
  @Schema(description = "")
  public Boolean isManglerDokumentasjon() {
    return manglerDokumentasjon;
  }
  public void setManglerDokumentasjon(Boolean manglerDokumentasjon) {
    this.manglerDokumentasjon = manglerDokumentasjon;
  }
  public EvuKursDeltakelse studiekontraktMottatt(Boolean studiekontraktMottatt) {
    this.studiekontraktMottatt = studiekontraktMottatt;
    return this;
  }

  

  /**
  * Get studiekontraktMottatt
  * @return studiekontraktMottatt
  **/
  @Schema(description = "")
  public Boolean isStudiekontraktMottatt() {
    return studiekontraktMottatt;
  }
  public void setStudiekontraktMottatt(Boolean studiekontraktMottatt) {
    this.studiekontraktMottatt = studiekontraktMottatt;
  }
  public EvuKursDeltakelse datoPameldt(LocalDate datoPameldt) {
    this.datoPameldt = datoPameldt;
    return this;
  }

  

  /**
  * Get datoPameldt
  * @return datoPameldt
  **/
  @Schema(description = "")
  public LocalDate getDatoPameldt() {
    return datoPameldt;
  }
  public void setDatoPameldt(LocalDate datoPameldt) {
    this.datoPameldt = datoPameldt;
  }
  public EvuKursDeltakelse datoKursbevisUtstedt(LocalDate datoKursbevisUtstedt) {
    this.datoKursbevisUtstedt = datoKursbevisUtstedt;
    return this;
  }

  

  /**
  * Get datoKursbevisUtstedt
  * @return datoKursbevisUtstedt
  **/
  @Schema(description = "")
  public LocalDate getDatoKursbevisUtstedt() {
    return datoKursbevisUtstedt;
  }
  public void setDatoKursbevisUtstedt(LocalDate datoKursbevisUtstedt) {
    this.datoKursbevisUtstedt = datoKursbevisUtstedt;
  }
  public EvuKursDeltakelse datoTrukket(LocalDate datoTrukket) {
    this.datoTrukket = datoTrukket;
    return this;
  }

  

  /**
  * Get datoTrukket
  * @return datoTrukket
  **/
  @Schema(description = "")
  public LocalDate getDatoTrukket() {
    return datoTrukket;
  }
  public void setDatoTrukket(LocalDate datoTrukket) {
    this.datoTrukket = datoTrukket;
  }
  public EvuKursDeltakelse undervisningsparti(Integer undervisningsparti) {
    this.undervisningsparti = undervisningsparti;
    return this;
  }

  

  /**
  * Get undervisningsparti
  * @return undervisningsparti
  **/
  @Schema(description = "")
  public Integer getUndervisningsparti() {
    return undervisningsparti;
  }
  public void setUndervisningsparti(Integer undervisningsparti) {
    this.undervisningsparti = undervisningsparti;
  }
  public EvuKursDeltakelse ventelistenummer(Integer ventelistenummer) {
    this.ventelistenummer = ventelistenummer;
    return this;
  }

  

  /**
  * Get ventelistenummer
  * @return ventelistenummer
  **/
  @Schema(description = "")
  public Integer getVentelistenummer() {
    return ventelistenummer;
  }
  public void setVentelistenummer(Integer ventelistenummer) {
    this.ventelistenummer = ventelistenummer;
  }
  public EvuKursDeltakelse fakturaReferanse(String fakturaReferanse) {
    this.fakturaReferanse = fakturaReferanse;
    return this;
  }

  

  /**
  * Get fakturaReferanse
  * @return fakturaReferanse
  **/
  @Schema(description = "")
  public String getFakturaReferanse() {
    return fakturaReferanse;
  }
  public void setFakturaReferanse(String fakturaReferanse) {
    this.fakturaReferanse = fakturaReferanse;
  }
  public EvuKursDeltakelse merknad(String merknad) {
    this.merknad = merknad;
    return this;
  }

  

  /**
  * Get merknad
  * @return merknad
  **/
  @Schema(description = "")
  public String getMerknad() {
    return merknad;
  }
  public void setMerknad(String merknad) {
    this.merknad = merknad;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvuKursDeltakelse evuKursDeltakelse = (EvuKursDeltakelse) o;
    return Objects.equals(this.id, evuKursDeltakelse.id) &&
        Objects.equals(this.foretak, evuKursDeltakelse.foretak) &&
        Objects.equals(this.registreringsform, evuKursDeltakelse.registreringsform) &&
        Objects.equals(this.avbruddsstatus, evuKursDeltakelse.avbruddsstatus) &&
        Objects.equals(this.informasjonskilde, evuKursDeltakelse.informasjonskilde) &&
        Objects.equals(this.tilbudstatus, evuKursDeltakelse.tilbudstatus) &&
        Objects.equals(this.svarstatus, evuKursDeltakelse.svarstatus) &&
        Objects.equals(this.mott, evuKursDeltakelse.mott) &&
        Objects.equals(this.godkjent, evuKursDeltakelse.godkjent) &&
        Objects.equals(this.kursbevisUtstedt, evuKursDeltakelse.kursbevisUtstedt) &&
        Objects.equals(this.privatFaktura, evuKursDeltakelse.privatFaktura) &&
        Objects.equals(this.resNett, evuKursDeltakelse.resNett) &&
        Objects.equals(this.vurdering, evuKursDeltakelse.vurdering) &&
        Objects.equals(this.opptatt, evuKursDeltakelse.opptatt) &&
        Objects.equals(this.rabattpris, evuKursDeltakelse.rabattpris) &&
        Objects.equals(this.betaltSemesteravgift, evuKursDeltakelse.betaltSemesteravgift) &&
        Objects.equals(this.ordneOvernattingSelv, evuKursDeltakelse.ordneOvernattingSelv) &&
        Objects.equals(this.ordneReiseSelv, evuKursDeltakelse.ordneReiseSelv) &&
        Objects.equals(this.manglerDokumentasjon, evuKursDeltakelse.manglerDokumentasjon) &&
        Objects.equals(this.studiekontraktMottatt, evuKursDeltakelse.studiekontraktMottatt) &&
        Objects.equals(this.datoPameldt, evuKursDeltakelse.datoPameldt) &&
        Objects.equals(this.datoKursbevisUtstedt, evuKursDeltakelse.datoKursbevisUtstedt) &&
        Objects.equals(this.datoTrukket, evuKursDeltakelse.datoTrukket) &&
        Objects.equals(this.undervisningsparti, evuKursDeltakelse.undervisningsparti) &&
        Objects.equals(this.ventelistenummer, evuKursDeltakelse.ventelistenummer) &&
        Objects.equals(this.fakturaReferanse, evuKursDeltakelse.fakturaReferanse) &&
        Objects.equals(this.merknad, evuKursDeltakelse.merknad);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, foretak, registreringsform, avbruddsstatus, informasjonskilde, tilbudstatus, svarstatus, mott, godkjent, kursbevisUtstedt, privatFaktura, resNett, vurdering, opptatt, rabattpris, betaltSemesteravgift, ordneOvernattingSelv, ordneReiseSelv, manglerDokumentasjon, studiekontraktMottatt, datoPameldt, datoKursbevisUtstedt, datoTrukket, undervisningsparti, ventelistenummer, fakturaReferanse, merknad);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvuKursDeltakelse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    foretak: ").append(toIndentedString(foretak)).append("\n");
    sb.append("    registreringsform: ").append(toIndentedString(registreringsform)).append("\n");
    sb.append("    avbruddsstatus: ").append(toIndentedString(avbruddsstatus)).append("\n");
    sb.append("    informasjonskilde: ").append(toIndentedString(informasjonskilde)).append("\n");
    sb.append("    tilbudstatus: ").append(toIndentedString(tilbudstatus)).append("\n");
    sb.append("    svarstatus: ").append(toIndentedString(svarstatus)).append("\n");
    sb.append("    mott: ").append(toIndentedString(mott)).append("\n");
    sb.append("    godkjent: ").append(toIndentedString(godkjent)).append("\n");
    sb.append("    kursbevisUtstedt: ").append(toIndentedString(kursbevisUtstedt)).append("\n");
    sb.append("    privatFaktura: ").append(toIndentedString(privatFaktura)).append("\n");
    sb.append("    resNett: ").append(toIndentedString(resNett)).append("\n");
    sb.append("    vurdering: ").append(toIndentedString(vurdering)).append("\n");
    sb.append("    opptatt: ").append(toIndentedString(opptatt)).append("\n");
    sb.append("    rabattpris: ").append(toIndentedString(rabattpris)).append("\n");
    sb.append("    betaltSemesteravgift: ").append(toIndentedString(betaltSemesteravgift)).append("\n");
    sb.append("    ordneOvernattingSelv: ").append(toIndentedString(ordneOvernattingSelv)).append("\n");
    sb.append("    ordneReiseSelv: ").append(toIndentedString(ordneReiseSelv)).append("\n");
    sb.append("    manglerDokumentasjon: ").append(toIndentedString(manglerDokumentasjon)).append("\n");
    sb.append("    studiekontraktMottatt: ").append(toIndentedString(studiekontraktMottatt)).append("\n");
    sb.append("    datoPameldt: ").append(toIndentedString(datoPameldt)).append("\n");
    sb.append("    datoKursbevisUtstedt: ").append(toIndentedString(datoKursbevisUtstedt)).append("\n");
    sb.append("    datoTrukket: ").append(toIndentedString(datoTrukket)).append("\n");
    sb.append("    undervisningsparti: ").append(toIndentedString(undervisningsparti)).append("\n");
    sb.append("    ventelistenummer: ").append(toIndentedString(ventelistenummer)).append("\n");
    sb.append("    fakturaReferanse: ").append(toIndentedString(fakturaReferanse)).append("\n");
    sb.append("    merknad: ").append(toIndentedString(merknad)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
